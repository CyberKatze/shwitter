### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AllUsers {
  count: Int!
  users: [User!]!
}

type AuthPayload {
  token: String!
  user: User!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Feed {
  count: Int!
  shweets: [Shweet!]!
}

input FilterInputType {
  emailFilter: String
  skip: Int
  take: Int
  userId: Int
  usernameFilter: String
}

type LikedShweet {
  likedAt: DateTime!
  shweet: Shweet
  shweetId: Int!
  user: User
  userId: Int!
}

type Mutation {
  deleteShweet(id: Int!): Shweet!
  editProfile(data: ProfileInput!): Profile
  like(shweetId: Int!): LikedShweet
  login(email: String!, password: String!): AuthPayload!
  shweet(content: String!): Shweet!
  signup(email: String!, name: String!, password: String!, username: String!): AuthPayload!
  updateShweet(content: String!, id: Int!): Shweet!
}

type Profile {
  avatar: String
  bio: String
  createdAt: DateTime
  location: String
  name: String
  userId: Int!
  website: String
}

input ProfileInput {
  avatar: String
  bio: String
  location: String
  name: String!
  website: String
}

type Query {
  allUsers(data: FilterInputType): AllUsers!
  feed(filter: String, orderBy: [ShweetOrderByInput!], skip: Int, take: Int): Feed!
  me: User
}

type Shweet {
  author: User
  content: String!
  createdAt: DateTime!
  id: Int!
  likedShweet: [LikedShweet!]!
  updatedAt: DateTime!
}

input ShweetOrderByInput {
  content: Sort
  createdAt: Sort
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  profile: Profile
  shweets: [Shweet!]!
  username: String!
}
